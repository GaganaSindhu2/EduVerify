{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\EduVerify\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport EduVerify from './EduVerify.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [contract, setContract] = useState(null);\n  const connectWallet = async () => {\n    const prov = new ethers.providers.Web3Provider(window.ethereum);\n    await prov.send(\"eth_requestAccounts\", []);\n    const signer = prov.getSigner();\n    const userAddress = await signer.getAddress();\n    const contract = new ethers.Contract(contractAddress, EduVerify.abi, signer);\n    setAccount(userAddress);\n    setProvider(prov);\n    setContract(eduVerifyContract);\n  };\n  const issueCredential = async () => {\n    const tx = await contract.issueCredential(\"0xStudentAddress\",\n    // recipient student\n    \"Alice\",\n    // name\n    \"B.Tech\",\n    // course\n    \"Your University\" // institution\n    );\n    await tx.wait();\n    alert(\"Credential Issued!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected as: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: issueCredential,\n      children: \"Issue Credential\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z3ero4PahIP707hdSTpjUjpKIT4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","EduVerify","jsxDEV","_jsxDEV","contractAddress","process","env","REACT_APP_CONTRACT_ADDRESS","App","_s","account","setAccount","provider","setProvider","contract","setContract","connectWallet","prov","providers","Web3Provider","window","ethereum","send","signer","getSigner","userAddress","getAddress","Contract","abi","eduVerifyContract","issueCredential","tx","wait","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/EduVerify/frontend/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport EduVerify from './EduVerify.json';\r\n\r\n\r\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(null);\r\n  const [provider, setProvider] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n\r\n  const connectWallet = async () => {\r\n    const prov = new ethers.providers.Web3Provider(window.ethereum);\r\n    await prov.send(\"eth_requestAccounts\", []);\r\n    const signer = prov.getSigner();\r\n    const userAddress = await signer.getAddress();\r\n    const contract = new ethers.Contract(contractAddress, EduVerify.abi, signer);\r\n\r\n\r\n    setAccount(userAddress);\r\n    setProvider(prov);\r\n    setContract(eduVerifyContract);\r\n  };\r\n\r\n  const issueCredential = async () => {\r\n    const tx = await contract.issueCredential(\r\n      \"0xStudentAddress\", // recipient student\r\n      \"Alice\",            // name\r\n      \"B.Tech\",           // course\r\n      \"Your University\"   // institution\r\n    );\r\n    await tx.wait();\r\n    alert(\"Credential Issued!\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={connectWallet}>Connect Wallet</button>\r\n      {account && <p>Connected as: {account}</p>}\r\n      <button onClick={issueCredential}>Issue Credential</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,IAAI,GAAG,IAAIjB,MAAM,CAACkB,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IAC/D,MAAMJ,IAAI,CAACK,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC1C,MAAMC,MAAM,GAAGN,IAAI,CAACO,SAAS,CAAC,CAAC;IAC/B,MAAMC,WAAW,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;IAC7C,MAAMZ,QAAQ,GAAG,IAAId,MAAM,CAAC2B,QAAQ,CAACvB,eAAe,EAAEH,SAAS,CAAC2B,GAAG,EAAEL,MAAM,CAAC;IAG5EZ,UAAU,CAACc,WAAW,CAAC;IACvBZ,WAAW,CAACI,IAAI,CAAC;IACjBF,WAAW,CAACc,iBAAiB,CAAC;EAChC,CAAC;EAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,EAAE,GAAG,MAAMjB,QAAQ,CAACgB,eAAe,CACvC,kBAAkB;IAAE;IACpB,OAAO;IAAa;IACpB,QAAQ;IAAY;IACpB,iBAAiB,CAAG;IACtB,CAAC;IACD,MAAMC,EAAE,CAACC,IAAI,CAAC,CAAC;IACfC,KAAK,CAAC,oBAAoB,CAAC;EAC7B,CAAC;EAED,oBACE9B,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAQgC,OAAO,EAAEnB,aAAc;MAAAkB,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtD7B,OAAO,iBAAIP,OAAA;MAAA+B,QAAA,GAAG,gBAAc,EAACxB,OAAO;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CpC,OAAA;MAAQgC,OAAO,EAAEL,eAAgB;MAAAI,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAAC9B,EAAA,CApCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}