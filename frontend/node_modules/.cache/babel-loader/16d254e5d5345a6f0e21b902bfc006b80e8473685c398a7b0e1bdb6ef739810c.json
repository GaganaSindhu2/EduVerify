{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\EduVerify\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport EduVerify from \"C:/Users/DELL/Downloads/EduVerify/frontend/src/abis/EduVerifyABI.json\"; // Import ABI correctly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EduVerifyABI = EduVerify.abi; // Ensure correct assignment\nconst contractAddress = \"0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9\"; // Replace with deployed contract address\n\nfunction App() {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [credential, setCredential] = useState(null);\n  useEffect(() => {\n    async function loadBlockchainData() {\n      if (window.ethereum) {\n        try {\n          // Request account access\n          const accounts = await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\n          const signer = provider.getSigner();\n\n          // Load contract\n          const contractInstance = new ethers.Contract(contractAddress, EduVerifyABI, signer);\n          setAccount(accounts[0]); // Set the first account\n          setContract(contractInstance);\n        } catch (error) {\n          console.error(\"Error loading blockchain data:\", error);\n        }\n      } else {\n        console.error(\"MetaMask is not installed.\");\n      }\n    }\n    loadBlockchainData();\n\n    // Listen for account change\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        setAccount(accounts.length > 0 ? accounts[0] : \"Not connected\");\n      });\n    }\n  }, []);\n\n  /*const verifyCredential = async () => {\r\n    if (contract) {\r\n      try {\r\n        const data = await contract.verifyCredential(account);\r\n        setCredential(data);\r\n      } catch (error) {\r\n        console.error(\"Error verifying credential:\", error);\r\n      }\r\n    } else {\r\n      console.error(\"Contract is not loaded.\");\r\n    }\r\n  };*/\n  async function verifyCredential() {\n    try {\n      const hasCredential = await EduVerify.hasCredential(account); // New helper function\n      if (!hasCredential) {\n        alert(\"No credential found for this account.\");\n        return;\n      }\n      const result = await EduVerify.verifyCredential(account);\n      console.log(\"Credential Details:\", result);\n    } catch (error) {\n      console.error(\"Error verifying credential:\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"EduVerify: Blockchain Student Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Connected Account:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }, this), \" \", account || \"Not connected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: verifyCredential,\n      children: \"Verify Credential\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), credential && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }, this), \" \", credential[0] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Course:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 14\n        }, this), \" \", credential[1] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Institution:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }, this), \" \", credential[2] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Issued Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this), \" \", credential[3] ? new Date(credential[3] * 1000).toLocaleDateString() : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }, this), \" \", credential[4] ? \"Valid\" : \"Revoked\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0xLGPuvPKSsoLqIHSFzF/V7IgFk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","EduVerify","jsxDEV","_jsxDEV","EduVerifyABI","abi","contractAddress","App","_s","account","setAccount","contract","setContract","credential","setCredential","loadBlockchainData","window","ethereum","accounts","request","method","provider","providers","Web3Provider","signer","getSigner","contractInstance","Contract","error","console","on","length","verifyCredential","hasCredential","alert","result","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/EduVerify/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport EduVerify from \"C:/Users/DELL/Downloads/EduVerify/frontend/src/abis/EduVerifyABI.json\"; // Import ABI correctly\r\n\r\nconst EduVerifyABI = EduVerify.abi; // Ensure correct assignment\r\nconst contractAddress = \"0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9\"; // Replace with deployed contract address\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState(\"\");\r\n  const [contract, setContract] = useState(null);\r\n  const [credential, setCredential] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function loadBlockchainData() {\r\n      if (window.ethereum) {\r\n        try {\r\n          // Request account access\r\n          const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner();\r\n          \r\n          // Load contract\r\n          const contractInstance = new ethers.Contract(contractAddress, EduVerifyABI, signer);\r\n\r\n          setAccount(accounts[0]); // Set the first account\r\n          setContract(contractInstance);\r\n        } catch (error) {\r\n          console.error(\"Error loading blockchain data:\", error);\r\n        }\r\n      } else {\r\n        console.error(\"MetaMask is not installed.\");\r\n      }\r\n    }\r\n\r\n    loadBlockchainData();\r\n\r\n    // Listen for account change\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        setAccount(accounts.length > 0 ? accounts[0] : \"Not connected\");\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  /*const verifyCredential = async () => {\r\n    if (contract) {\r\n      try {\r\n        const data = await contract.verifyCredential(account);\r\n        setCredential(data);\r\n      } catch (error) {\r\n        console.error(\"Error verifying credential:\", error);\r\n      }\r\n    } else {\r\n      console.error(\"Contract is not loaded.\");\r\n    }\r\n  };*/\r\n  async function verifyCredential() {\r\n    try {\r\n        const hasCredential = await EduVerify.hasCredential(account); // New helper function\r\n        if (!hasCredential) {\r\n            alert(\"No credential found for this account.\");\r\n            return;\r\n        }\r\n\r\n        const result = await EduVerify.verifyCredential(account);\r\n        console.log(\"Credential Details:\", result);\r\n    } catch (error) {\r\n        console.error(\"Error verifying credential:\", error);\r\n    }\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>EduVerify: Blockchain Student Credentials</h1>\r\n      <p><strong>Connected Account:</strong> {account || \"Not connected\"}</p>\r\n      <button onClick={verifyCredential}>Verify Credential</button>\r\n      {credential && (\r\n        <div>\r\n          <p><strong>Name:</strong> {credential[0] || \"N/A\"}</p>\r\n          <p><strong>Course:</strong> {credential[1] || \"N/A\"}</p>\r\n          <p><strong>Institution:</strong> {credential[2] || \"N/A\"}</p>\r\n          <p><strong>Issued Date:</strong> {credential[3] ? new Date(credential[3] * 1000).toLocaleDateString() : \"N/A\"}</p>\r\n          <p><strong>Status:</strong> {credential[4] ? \"Valid\" : \"Revoked\"}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}